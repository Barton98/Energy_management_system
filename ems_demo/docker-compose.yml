version: '3.8'

# ðŸš€ ADVANCED VERSION - for learning/future development
# For demo use: docker-compose.minimal.yml
# This version shows potential scaling (PostgreSQL, Redis, Grafana)
# Currently not needed for basic testing

services:
  # API Server - gÅ‚Ã³wna aplikacja
  ems-api:
    build: .
    container_name: ems-api-server
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENV=production
    restart: unless-stopped
    networks:
      - ems-network
    volumes:
      # Mount dla logÃ³w (opcjonalnie)
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/docs', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Device Simulator - symulator urzÄ…dzeÅ„ IoT
  ems-simulator:
    build: .
    container_name: ems-device-simulator
    command: python device_sim.py
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://ems-api:8000
    depends_on:
      ems-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ems-network

  # Redis - dla cache i session storage (opcjonalne rozszerzenie)
  redis:
    image: redis:7-alpine
    container_name: ems-redis
    restart: unless-stopped
    networks:
      - ems-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # PostgreSQL - dla trwaÅ‚ego storage (opcjonalne rozszerzenie)
  postgres:
    image: postgres:15-alpine
    container_name: ems-postgres
    environment:
      POSTGRES_DB: ems_db
      POSTGRES_USER: ems_user
      POSTGRES_PASSWORD: ems_password
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ems-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  # Grafana - dashboard dla monitoringu (opcjonalnie)
  grafana:
    image: grafana/grafana:latest
    container_name: ems-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    restart: unless-stopped
    networks:
      - ems-network
    volumes:
      - grafana-data:/var/lib/grafana

networks:
  ems-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  grafana-data: