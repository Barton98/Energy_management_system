name: EMS Testing Pipeline

# Simple CI
# Runs tests automatically when code changes are pushed

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Run Python tests
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get code from repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install required packages
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run automated tests
      run: |
        pytest test_ems_extended.py -v
        pytest test_qa_advanced.py -v
        
    - name: Test API basic functionality
      run: |
        # Start API server in background
        python api.py &
        API_PID=$!
        sleep 5
        
        # Simple test - check if API responds
        curl -f http://localhost:8000/docs || exit 1
        
        # Stop API server
        kill $API_PID

  # Job 2: Test Docker setup (basic)
  docker-test:
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    
    steps:
    - name: Get code from repository
      uses: actions/checkout@v4
    
    - name: Test Docker build
      run: |
        docker build -t ems-demo .
        
    - name: Test minimal docker-compose
      run: |
        docker-compose -f docker-compose.minimal.yml up -d
        sleep 15
        
        # Test if API is accessible
        curl -f http://localhost:8000/docs || exit 1
        
        # Cleanup
        docker-compose -f docker-compose.minimal.yml down

# This pipeline demonstrates:
# - Automated testing on code changes
# - Basic Docker functionality validation  
# - Quality gates (Docker only runs if tests pass)
# - CI/CD understanding
